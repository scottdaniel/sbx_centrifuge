# -*- mode: Snakemake -*-

TARGET_CENTRIFUGE = [
    expand(str(CLASSIFY_FP/'centrifuge'/'raw'/'{sample}.hits'), sample = Samples.keys()),
    expand(str(CLASSIFY_FP/'centrifuge'/'reports'/'{sample}.report.tsv'), sample = Samples.keys())
]

rule all_centrifuge:
    input:
        TARGET_CENTRIFUGE

rule run_centrifuge:
    output:
        cent_out = str(CLASSIFY_FP/'centrifuge'/'raw'/'{sample}.hits'),
        tsv_out = str(CLASSIFY_FP/'centrifuge'/'reports'/'{sample}.report.tsv')
    input:
        pair = expand(str(QC_FP/'decontam'/'{sample}_{rp}.fastq.gz'),
                      sample = "{sample}",
                      rp = Pairs)
    params:
        index = Cfg['sbx_centrifuge']['index']
    log:
        str(CLASSIFY_FP/'centrifuge'/'logs'/'centrifuge_{sample}.error')
    threads:
        Cfg['sbx_centrifuge']['threads']
    conda:
        "sbx_centrifuge_env.yml"
    shell:
        """

        centrifuge -p {threads} -x {params.index} \
        -1 {input.pair[0]} -2 {input.pair[1]} \
        -S {output.cent_out} \
        --report-file {output.tsv_out} \
        2> {log}

        """

